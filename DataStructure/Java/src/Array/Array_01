package Array;

import java.util.Scanner;

public class Array_01 {
    public static void main(String[] args) throws Exception {
        Scanner scanner = new Scanner(System.in);
        StringBuilder sb = new StringBuilder();

        int t = scanner.nextInt();
        scanner.nextLine();

        Array array = new Array();

        for (int i = 0; i < t; i++) {
            String input = scanner.nextLine();

            String[] inputSplit = input.split(" ");
            String op = inputSplit[0];
            int index = Integer.parseInt(inputSplit[1]);
            int value;

            switch (op) {
                case "at":
                    sb.append(array.at(index) + "\n");
                    break;
                case "set":
                    value = Integer.parseInt(inputSplit[2]);
                    array.set(index, value);
                    break;
                case "add":
                    value = Integer.parseInt(inputSplit[2]);
                    array.add(index, value);
                    break;
            }
        }

        scanner.close();

        System.out.println(sb);
    }

    static class Array {
        private int[] value = new int[10000];
        private int last;

        public Array() {
            for (int i = 0; i < value.length; i++) {
                value[i] = 0;
            }

            last = -1;
        }

        public int size() {
            return value.length;
        }

        public int[] getAll() {
            return value;
        }

        public int getLastIndex() {
            return last;
        }

        public int at(int i) {
            if (i < 0 || i >= value.length) {
                return 0;
            }

            return value[i];
        }

        public int set(int i, int x) {
            if (i < 0 || i >= value.length) {
                return 0;
            }

            value[i] = x;

            if (i > last) {
                last = i;
            }

            return x;
        }

        public void add(int i, int x) {
            if (i < 0 || i >= value.length) {
                return;
            }

            // 꽉 찬 경우
            if (i == value.length - 1) {
                return;
            }

            // 빈 경우
            if (last == -1) {
                value[0] = x;
                last = 0;
                return;
            }

            if (value[i] != 0) {
                for (int n = last; n >= i; n--) {
                    value[n + 1] = value[n];
                }

                value[i] = x;
                last += 1;
            } else {
                value[++last] = x;
            }
        }
    }
}
